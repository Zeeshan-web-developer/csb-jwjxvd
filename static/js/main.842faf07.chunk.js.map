{"version":3,"sources":["App.js","index.js"],"names":["App","_useForm","useForm","criteriaMode","shouldFocusError","control","handleSubmit","errors","formState","_jsxs","onSubmit","data","alert","JSON","stringify","children","_jsx","username","types","required","maxLength","Controller","name","render","_ref","_ref$field","field","onChange","value","ref","type","e","target","_ref2","_ref2$field","_ref3","_ref3$field","_ref4","_ref4$field","_ref5","_ref5$field","_ref6","_ref6$field","_ref7","_ref7$field","_ref8","_ref8$field","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.842faf07.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n// import TextBox from \"./TextField\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    criteriaMode: \"all\",\n    shouldFocusError: true\n  });\n\n  const onSubmit = (data) => {\n    alert(JSON.stringify(data));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* <TextBox label=\"First Name\" name=\"firstName\" control={control} /> */}\n\n      <label>Username</label>\n      {/* <Controller\n        name=\"username\"\n        control={control}\n        rules={{\n          required: { value: true, message: \"this field is required\" },\n          maxLength: { value: 2, message: \"the length is too long\" }\n        }}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      /> */}\n      {errors.username && errors.username.types && (\n        <p>{errors.username.types.required}</p>\n      )}\n      {errors.username && errors.username.types && (\n        <p>{errors.username.types.maxLength}</p>\n      )}\n      <label>First Name</label>\n      <Controller\n        name=\"firstName\"\n        control={control}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      />\n\n      <label>Last Name</label>\n      <Controller\n        name=\"lastName\"\n        control={control}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      />\n\n      <label>Company</label>\n      <Controller\n        name=\"company\"\n        control={control}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      />\n\n      <label>City</label>\n      <Controller\n        name=\"city\"\n        control={control}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      />\n\n      <label>phone</label>\n      <Controller\n        name=\"phone\"\n        control={control}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      />\n\n      <label>job</label>\n      <Controller\n        name=\"job\"\n        control={control}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      />\n\n      <label>hobby</label>\n      <Controller\n        name=\"hobby\"\n        control={control}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      />\n\n      <label>school</label>\n      <Controller\n        name=\"school\"\n        control={control}\n        render={({ field: { onChange, value, ref } }) => {\n          return (\n            <input\n              type=\"text\"\n              value={value}\n              ref={ref}\n              onChange={(e) => {\n                onChange(e.target.value);\n              }}\n            />\n          );\n        }}\n      />\n\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}